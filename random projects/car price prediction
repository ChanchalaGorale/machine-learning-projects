{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWPXY1+/driwXr27CECRYO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["**Get data from kaggle**"],"metadata":{"id":"Ms4w8qFVDlWB"}},{"cell_type":"code","source":["import kagglehub\n","\n","# Download latest version\n","path = kagglehub.dataset_download(\"mayankpatel14/second-hand-used-cars-data-set-linear-regression\")\n","\n","print(\"Path to dataset files:\", path)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pWhCCOUResvh","executionInfo":{"status":"ok","timestamp":1730518901921,"user_tz":-330,"elapsed":2919,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"0af9d6e8-c5c7-4ca2-e05d-a7c70d2d915d"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading from https://www.kaggle.com/api/v1/datasets/download/mayankpatel14/second-hand-used-cars-data-set-linear-regression?dataset_version_number=1...\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 24.3k/24.3k [00:00<00:00, 30.6MB/s]"]},{"output_type":"stream","name":"stdout","text":["Extracting files...\n","Path to dataset files: /root/.cache/kagglehub/datasets/mayankpatel14/second-hand-used-cars-data-set-linear-regression/versions/1\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"markdown","source":["**Check data for datasets**"],"metadata":{"id":"QESrZWb3Dv-v"}},{"cell_type":"code","source":["!ls {path}"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z4lnBYk7jNFT","executionInfo":{"status":"ok","timestamp":1730518904190,"user_tz":-330,"elapsed":386,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"450eedf3-c4ce-4955-ffbb-ff183ef7b93c"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["train.csv\n"]}]},{"cell_type":"markdown","source":["**Import required libraries**"],"metadata":{"id":"Zq8kf-6KD4ru"}},{"cell_type":"code","source":["import tensorflow as tf"],"metadata":{"id":"C0FxBnbLgFP2","executionInfo":{"status":"ok","timestamp":1730518909932,"user_tz":-330,"elapsed":3973,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["import pandas as pd"],"metadata":{"id":"YQM6xqrkgHTN","executionInfo":{"status":"ok","timestamp":1730518909932,"user_tz":-330,"elapsed":1,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["import seaborn as sns"],"metadata":{"id":"mUJiC4NwgJ6W","executionInfo":{"status":"ok","timestamp":1730518912121,"user_tz":-330,"elapsed":2190,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["**Prepare darfremae with kaggle dataset**"],"metadata":{"id":"YggNtlbhD--o"}},{"cell_type":"code","source":["data = pd.read_csv(path+\"/train.csv\")"],"metadata":{"id":"tCsnWFKQgOIE","executionInfo":{"status":"ok","timestamp":1730518912607,"user_tz":-330,"elapsed":2,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["**Analyse dataset**"],"metadata":{"id":"snrAy4KMEG_W"}},{"cell_type":"code","source":["data.info()"],"metadata":{"id":"Co_0DXUlhIaQ","executionInfo":{"status":"ok","timestamp":1730518916269,"user_tz":-330,"elapsed":404,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"f2675cf7-a668-4e1d-8b1d-eddd89e9eac0"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1000 entries, 0 to 999\n","Data columns (total 12 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   v.id           1000 non-null   int64  \n"," 1   on road old    1000 non-null   int64  \n"," 2   on road now    1000 non-null   int64  \n"," 3   years          1000 non-null   int64  \n"," 4   km             1000 non-null   int64  \n"," 5   rating         1000 non-null   int64  \n"," 6   condition      1000 non-null   int64  \n"," 7   economy        1000 non-null   int64  \n"," 8   top speed      1000 non-null   int64  \n"," 9   hp             1000 non-null   int64  \n"," 10  torque         1000 non-null   int64  \n"," 11  current price  1000 non-null   float64\n","dtypes: float64(1), int64(11)\n","memory usage: 93.9 KB\n"]}]},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"j0FuFI4qkSe7","executionInfo":{"status":"ok","timestamp":1730518918100,"user_tz":-330,"elapsed":422,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"b43e5934-2471-463a-e09e-276826840f5f"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   v.id  on road old  on road now  years      km  rating  condition  economy  \\\n","0     1       535651       798186      3   78945       1          2       14   \n","1     2       591911       861056      6  117220       5          9        9   \n","2     3       686990       770762      2  132538       2          8       15   \n","3     4       573999       722381      4  101065       4          3       11   \n","4     5       691388       811335      6   61559       3          9       12   \n","\n","   top speed  hp  torque  current price  \n","0        177  73     123       351318.0  \n","1        148  74      95       285001.5  \n","2        181  53      97       215386.0  \n","3        197  54     116       244295.5  \n","4        160  53     105       531114.5  "],"text/html":["\n","  <div id=\"df-ddfc66c1-b733-4760-920b-68472cdca9bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>v.id</th>\n","      <th>on road old</th>\n","      <th>on road now</th>\n","      <th>years</th>\n","      <th>km</th>\n","      <th>rating</th>\n","      <th>condition</th>\n","      <th>economy</th>\n","      <th>top speed</th>\n","      <th>hp</th>\n","      <th>torque</th>\n","      <th>current price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>535651</td>\n","      <td>798186</td>\n","      <td>3</td>\n","      <td>78945</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>177</td>\n","      <td>73</td>\n","      <td>123</td>\n","      <td>351318.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>591911</td>\n","      <td>861056</td>\n","      <td>6</td>\n","      <td>117220</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>148</td>\n","      <td>74</td>\n","      <td>95</td>\n","      <td>285001.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>686990</td>\n","      <td>770762</td>\n","      <td>2</td>\n","      <td>132538</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>15</td>\n","      <td>181</td>\n","      <td>53</td>\n","      <td>97</td>\n","      <td>215386.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>573999</td>\n","      <td>722381</td>\n","      <td>4</td>\n","      <td>101065</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>197</td>\n","      <td>54</td>\n","      <td>116</td>\n","      <td>244295.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>691388</td>\n","      <td>811335</td>\n","      <td>6</td>\n","      <td>61559</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>160</td>\n","      <td>53</td>\n","      <td>105</td>\n","      <td>531114.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ddfc66c1-b733-4760-920b-68472cdca9bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ddfc66c1-b733-4760-920b-68472cdca9bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ddfc66c1-b733-4760-920b-68472cdca9bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1e9b5a77-b229-48ea-8bbc-ce670b615a6e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e9b5a77-b229-48ea-8bbc-ce670b615a6e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1e9b5a77-b229-48ea-8bbc-ce670b615a6e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"v.id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"on road old\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58407,\n        \"min\": 500265,\n        \"max\": 699859,\n        \"num_unique_values\": 998,\n        \"samples\": [\n          658059,\n          601674,\n          617090\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"on road now\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57028,\n        \"min\": 700018,\n        \"max\": 899797,\n        \"num_unique_values\": 998,\n        \"samples\": [\n          755102,\n          863684,\n          734310\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"years\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3,\n          6,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29150,\n        \"min\": 50324,\n        \"max\": 149902,\n        \"num_unique_values\": 997,\n        \"samples\": [\n          61132,\n          62186,\n          137960\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          6,\n          9,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"economy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 8,\n        \"max\": 15,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9,\n          13,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 135,\n        \"max\": 200,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          155,\n          140,\n          177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 50,\n        \"max\": 120,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          77,\n          73,\n          104\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"torque\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 68,\n        \"max\": 140,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          105,\n          98,\n          139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"current price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 126073.25914983764,\n        \"min\": 28226.5,\n        \"max\": 584267.5,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          383570.5,\n          506854.0,\n          146223.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["data.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NDS6Qm4hksHM","executionInfo":{"status":"ok","timestamp":1730518920821,"user_tz":-330,"elapsed":400,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"f0195a8d-c6cd-4c3c-84cf-52518c4b1672"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1000, 12)"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["no_v_id_column = data.loc[:,data.columns != 'v.id']\n","\n","# other way to achive same result\n","noVIdColumn=data.drop('v.id',axis=1)\n","noVIdCol=data[[col for col in data.columns if col != 'v.id']]"],"metadata":{"id":"OBFvnIBb9dOn","executionInfo":{"status":"ok","timestamp":1730519357333,"user_tz":-330,"elapsed":384,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"Tlq-x-zV-3TD","executionInfo":{"status":"ok","timestamp":1730519581413,"user_tz":-330,"elapsed":410,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"11279a52-3e4d-4c20-8d15-eb7c7ad82b85"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     v.id  on road old  on road now  years      km  rating  condition  \\\n","0       1       535651       798186      3   78945       1          2   \n","1       2       591911       861056      6  117220       5          9   \n","2       3       686990       770762      2  132538       2          8   \n","3       4       573999       722381      4  101065       4          3   \n","4       5       691388       811335      6   61559       3          9   \n","..    ...          ...          ...    ...     ...     ...        ...   \n","995   996       633238       743850      5  125092       1          6   \n","996   997       599626       848195      4   83370       2          9   \n","997   998       646344       842733      7   86722       1          8   \n","998   999       535559       732439      2  140478       4          5   \n","999  1000       590105       779743      5   67295       4          2   \n","\n","     economy  top speed   hp  torque  current price  \n","0         14        177   73     123       351318.0  \n","1          9        148   74      95       285001.5  \n","2         15        181   53      97       215386.0  \n","3         11        197   54     116       244295.5  \n","4         12        160   53     105       531114.5  \n","..       ...        ...  ...     ...            ...  \n","995       11        171   95      97       190744.0  \n","996       14        161  101     120       419748.0  \n","997        9        196  113      89       405871.0  \n","998        9        184  112     128        74398.0  \n","999        8        199   99      96       414938.5  \n","\n","[1000 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-6f842130-269d-462b-8456-20f57a1b0419\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>v.id</th>\n","      <th>on road old</th>\n","      <th>on road now</th>\n","      <th>years</th>\n","      <th>km</th>\n","      <th>rating</th>\n","      <th>condition</th>\n","      <th>economy</th>\n","      <th>top speed</th>\n","      <th>hp</th>\n","      <th>torque</th>\n","      <th>current price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>535651</td>\n","      <td>798186</td>\n","      <td>3</td>\n","      <td>78945</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>14</td>\n","      <td>177</td>\n","      <td>73</td>\n","      <td>123</td>\n","      <td>351318.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>591911</td>\n","      <td>861056</td>\n","      <td>6</td>\n","      <td>117220</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>148</td>\n","      <td>74</td>\n","      <td>95</td>\n","      <td>285001.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>686990</td>\n","      <td>770762</td>\n","      <td>2</td>\n","      <td>132538</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>15</td>\n","      <td>181</td>\n","      <td>53</td>\n","      <td>97</td>\n","      <td>215386.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>573999</td>\n","      <td>722381</td>\n","      <td>4</td>\n","      <td>101065</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>11</td>\n","      <td>197</td>\n","      <td>54</td>\n","      <td>116</td>\n","      <td>244295.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>691388</td>\n","      <td>811335</td>\n","      <td>6</td>\n","      <td>61559</td>\n","      <td>3</td>\n","      <td>9</td>\n","      <td>12</td>\n","      <td>160</td>\n","      <td>53</td>\n","      <td>105</td>\n","      <td>531114.5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>996</td>\n","      <td>633238</td>\n","      <td>743850</td>\n","      <td>5</td>\n","      <td>125092</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>11</td>\n","      <td>171</td>\n","      <td>95</td>\n","      <td>97</td>\n","      <td>190744.0</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>997</td>\n","      <td>599626</td>\n","      <td>848195</td>\n","      <td>4</td>\n","      <td>83370</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>14</td>\n","      <td>161</td>\n","      <td>101</td>\n","      <td>120</td>\n","      <td>419748.0</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>998</td>\n","      <td>646344</td>\n","      <td>842733</td>\n","      <td>7</td>\n","      <td>86722</td>\n","      <td>1</td>\n","      <td>8</td>\n","      <td>9</td>\n","      <td>196</td>\n","      <td>113</td>\n","      <td>89</td>\n","      <td>405871.0</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>999</td>\n","      <td>535559</td>\n","      <td>732439</td>\n","      <td>2</td>\n","      <td>140478</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>184</td>\n","      <td>112</td>\n","      <td>128</td>\n","      <td>74398.0</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1000</td>\n","      <td>590105</td>\n","      <td>779743</td>\n","      <td>5</td>\n","      <td>67295</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>199</td>\n","      <td>99</td>\n","      <td>96</td>\n","      <td>414938.5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f842130-269d-462b-8456-20f57a1b0419')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6f842130-269d-462b-8456-20f57a1b0419 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6f842130-269d-462b-8456-20f57a1b0419');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d43c2a59-3be6-4c27-b80b-c7aca9930746\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d43c2a59-3be6-4c27-b80b-c7aca9930746')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d43c2a59-3be6-4c27-b80b-c7aca9930746 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_10cefbb7-2d4d-4a67-afc7-18875ae76ca9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_10cefbb7-2d4d-4a67-afc7-18875ae76ca9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 1000,\n  \"fields\": [\n    {\n      \"column\": \"v.id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 288,\n        \"min\": 1,\n        \"max\": 1000,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          522,\n          738,\n          741\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"on road old\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58407,\n        \"min\": 500265,\n        \"max\": 699859,\n        \"num_unique_values\": 998,\n        \"samples\": [\n          658059,\n          601674,\n          617090\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"on road now\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 57028,\n        \"min\": 700018,\n        \"max\": 899797,\n        \"num_unique_values\": 998,\n        \"samples\": [\n          755102,\n          863684,\n          734310\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"years\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 2,\n        \"max\": 7,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          3,\n          6,\n          7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"km\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29150,\n        \"min\": 50324,\n        \"max\": 149902,\n        \"num_unique_values\": 997,\n        \"samples\": [\n          61132,\n          62186,\n          137960\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          5,\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"condition\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          6,\n          9,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"economy\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 8,\n        \"max\": 15,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9,\n          13,\n          14\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top speed\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19,\n        \"min\": 135,\n        \"max\": 200,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          155,\n          140,\n          177\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"hp\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20,\n        \"min\": 50,\n        \"max\": 120,\n        \"num_unique_values\": 71,\n        \"samples\": [\n          77,\n          73,\n          104\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"torque\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 68,\n        \"max\": 140,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          105,\n          98,\n          139\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"current price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 126073.25914983764,\n        \"min\": 28226.5,\n        \"max\": 584267.5,\n        \"num_unique_values\": 1000,\n        \"samples\": [\n          383570.5,\n          506854.0,\n          146223.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["data_overview = sns.pairplot(no_v_id_column)\n","\n","data_overview.savefig(\"pairplot.pdf\", format=\"pdf\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":902,"output_embedded_package_id":"1px38Co8surzqiCU1KpeUI7153tfBnYk7"},"id":"aebcuD_fkt0T","executionInfo":{"status":"ok","timestamp":1730519792855,"user_tz":-330,"elapsed":60438,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"4fc9d3f2-0379-423b-c4bf-59725b9148f4"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","source":["data.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":460},"id":"53R9foXu9rFT","executionInfo":{"status":"ok","timestamp":1730519865893,"user_tz":-330,"elapsed":627,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"39ec1797-a470-4b91-c852-dcb1abc566b3"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["v.id             0\n","on road old      0\n","on road now      0\n","years            0\n","km               0\n","rating           0\n","condition        0\n","economy          0\n","top speed        0\n","hp               0\n","torque           0\n","current price    0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>v.id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>on road old</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>on road now</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>years</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>km</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>rating</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>condition</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>economy</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>top speed</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>hp</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>torque</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>current price</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","from matplotlib.backends.backend_pdf import PdfPages"],"metadata":{"id":"bG-BLTrFBZUm","executionInfo":{"status":"ok","timestamp":1730520252837,"user_tz":-330,"elapsed":413,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.heatmap(data.isnull(),cmap=\"viridis\", cbar=False, yticklabels=False)\n","plt.title(\"Missing Values Heatmap\")\n","\n","with PdfPages(\"pairplot.pdf\") as pdf:\n","  pdf.savefig()\n","  plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":620},"id":"l50-fr4EBl5g","executionInfo":{"status":"ok","timestamp":1730520353647,"user_tz":-330,"elapsed":1809,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"3549b611-6e86-4369-bc98-5c91c1dd56ae"},"execution_count":32,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Shuffle dataset**"],"metadata":{"id":"00nfExfmEX1x"}},{"cell_type":"code","source":["shuffled_data = tf.random.shuffle(data)"],"metadata":{"id":"7blwdJCODZtf","executionInfo":{"status":"ok","timestamp":1730520968999,"user_tz":-330,"elapsed":395,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["X= shuffled_data[:, 3:-1]\n","y=tf.expand_dims(shuffled_data[:, -1], -1)"],"metadata":{"id":"vCLJMt9-Fm6Z","executionInfo":{"status":"ok","timestamp":1730521224398,"user_tz":-330,"elapsed":410,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}}},"execution_count":41,"outputs":[]},{"cell_type":"code","source":["X.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1JGAnNYvGI0f","executionInfo":{"status":"ok","timestamp":1730521137645,"user_tz":-330,"elapsed":389,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"1d5b657d-7a6e-47bc-d533-8af5b89406d8"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TensorShape([1000, 8])"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TVJCI3ntGP2f","executionInfo":{"status":"ok","timestamp":1730521225732,"user_tz":-330,"elapsed":3,"user":{"displayName":"Chanchala Gorale","userId":"10505271218993835293"}},"outputId":"a6b1dfb1-3b60-4afb-fa18-5653a2b17e6e"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["TensorShape([1000, 1])"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":[],"metadata":{"id":"54byUItBGQt-"},"execution_count":null,"outputs":[]}]}